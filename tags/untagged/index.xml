<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>untagged on 困惑的人生</title>
    <link>https://palagend.github.io/tags/untagged/</link>
    <description>Recent content in untagged on 困惑的人生</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 06 Nov 2019 19:25:28 +0800</lastBuildDate>
    
	<atom:link href="https://palagend.github.io/tags/untagged/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>李健与孟小蓓的爱情就像信天翁</title>
      <link>https://palagend.github.io/posts/2019/11/%E6%9D%8E%E5%81%A5%E4%B8%8E%E5%AD%9F%E5%B0%8F%E8%93%93%E7%9A%84%E7%88%B1%E6%83%85%E5%B0%B1%E5%83%8F%E4%BF%A1%E5%A4%A9%E7%BF%81/</link>
      <pubDate>Wed, 06 Nov 2019 19:25:28 +0800</pubDate>
      
      <guid>https://palagend.github.io/posts/2019/11/%E6%9D%8E%E5%81%A5%E4%B8%8E%E5%AD%9F%E5%B0%8F%E8%93%93%E7%9A%84%E7%88%B1%E6%83%85%E5%B0%B1%E5%83%8F%E4%BF%A1%E5%A4%A9%E7%BF%81/</guid>
      <description>如果说歌手中一定有一个另类，那一定是李健。
世人皆匆忙，总有几个人不想赶路。
就如同高晓松说的一般：“我们身边的这一波人都不是当初的模样了，只有李健还是当年那个李健。”
然而最重要的是他对妻子的痴情与专一，打动了无数人。
参加《我是歌手》后，
李健成了无数人心中的偶像，尤其是众多女性眼里的“万人迷”。
有个记者曾经问他：“你知道么，很多女人都爱你。”
而当时李健是这么回答的：
 “我对女人充满了关爱和尊敬，
但我不会跟女性走得太近，
也不可能离婚。
我也喜欢很多女孩子，
但远远欣赏就够了。
我们可以欣赏很多人，
但不一定要去占有她。”
 李健出道这么多年，也一直保持着零绯闻的记录。
活成众人男神的他，从始至终，只钟情于一人，就是那个她10岁时遇见的姑娘——孟小蓓。
曾经有记者问李健，你们在哪里度的蜜月？
李健回答：“我一生都在度蜜月”。
我们羡慕“从前慢，车、马、邮件都慢，一生只爱一个人”的时光时，李健是那个真正溯流而上，去实现它的人。
李健在自己10岁时就与自己的妻子孟小蓓认识了。
“郎骑竹马来，绕床弄青梅”，后来那首被王菲一唱而红的《传奇》，就是李健写来形容他跟妻子奇妙的际遇。
&amp;ldquo;只因为在人群中多看了你一眼，再也没能忘掉你容颜&amp;rdquo;
那一年他十岁，她五岁。
无论贫贵富贱，小贝壳都默默的陪在李建身边不离不弃。
不管是广电总局上班的三年，还是后来在“水木年华”大红大紫的几年，亦或是李健隐退在四合院清贫写歌的那几年。
两人从来没有出现过裂痕，平淡却很知足。
小贝壳也成为了李健的精神之柱。
或许所谓的灵魂伴侣就是这般模样吧。
之后，李健为她写了很多情歌，《小鸟睡在我身旁》、《一往情深的恋人》、《转眼瞬间》以及《恋人》。
几乎每张专辑都有一首曲子与小贝壳有关。
《恋人》：
“写这首歌的时候，已经是后半夜了，用尽所有的情感专注于它，我的小贝壳被感动的一塌糊涂，可不知为什么脑海里总浮现天鹅的形象。后来才听说，一对天鹅中如果有一只死去，另一只也会随之而去。”
《小鸟睡在我身旁》：
“有一天夜里，我看着窗外树上的鸟窝，想里面的小鸟一定睡得很香甜，我身旁的小贝壳也静静地睡着，就像一只小鸟&amp;hellip; &amp;hellip; ”
《在每个想你的夜里》：
“写这首歌是在芝加哥，每每听到都会想起那里的冬天，至少能感觉当时空气中的味道。”
《转眼瞬间》：
“我不太在意变老，因为见过活得精彩的老人，可我在乎眼中的你，看到你变老，我会伤感&amp;hellip;”
《凌晨两点》：
“这是脆弱的时刻，看着窗外的大雾，弹起吉他：我的生活不能没有你……”
他一生的情歌，都只为她而唱。
网上曾有个很流行的问题：“怎样才能嫁给李健？”
有一个很火的答案这样说：
 你要会泡茶，养花，煮咖啡，懂摄影，要会弹琴画画还要厨艺好，要会翻译叶芝的诗，会做牛排番茄面、地中海沙拉。要知道玻璃蜥蜴不是蛇，要知道怎么做出清香晶莹最好吃的白米粽，还要成为清华的博士，在路上被星探搭讪。最重要的是，你还要在5岁的时候遇见他。”
 这段看似“你在逗我吗？”的段子般的条件，却真实的体现在了两人的婚姻关系中。其实就是李
他们真正做到了把婚姻活成了诗情画意。
李健会用“小贝壳”来称呼妻子，妻子会用各种“先生”来指代他，所有的“柴米油盐酱醋茶”都雅成了“ 琴棋书画诗酒茶”。
李健说， “她是天上掉下来的”。
“太太最终吸引我的不是容貌，是她说话的方式和内容。”
翻看小贝壳的微博，会发现，两个人这么多年，如诗一般的始终甜蜜如初。</description>
    </item>
    
    <item>
      <title>PasteDeploy</title>
      <link>https://palagend.github.io/posts/2019/10/pastedeploy/</link>
      <pubDate>Thu, 03 Oct 2019 16:13:20 +0800</pubDate>
      
      <guid>https://palagend.github.io/posts/2019/10/pastedeploy/</guid>
      <description>PasteDeploy 简介 PasteDeploy 是用来发现和配置 WSGI 应用的一个框架，可以方便地从配置文件加载 WSGI 应用。
PasteDeploy 的安装命令是 pip install PasteDeploy
PasteDeploy 配置文件 使用 PasteDeploy 都是围绕配置文件展开的，所以了解 PasteDeploy 配置的格式是熟练使用 PasteDeploy 的前提。
PasteDeploy 的配置文件由若干 section 组成，section 的组成格式如下：
[type:name]  其中方括号括起来的部分是声明 setion 的起始部分，section 的类型（type）和 section 的名称（name），如：[app:main] 等。section 的 type 可以有：app、composite、filter、pipeline、filter-app 等。
每个 section 中具体配置项的格式就是基本的 ini 格式：key = value，此外，PasteDeploy 的配置文件中使用 “#” 标注注释。
在基本了解 PasteDeploy 配置文件的书写格式后，我们不妨看一个实例，来具体了解不同 type 的 section。
PasteDeploy 中 section 的 type 示例 1：PasteDeploy 配置文件
[composite:main] use = egg:Paste#urlmap / = home /blog = blog /wiki = wiki /cms = config:cms.</description>
    </item>
    
    <item>
      <title>Openstack Source Code Debug</title>
      <link>https://palagend.github.io/posts/2019/09/openstack-source-code-debug/</link>
      <pubDate>Thu, 19 Sep 2019 17:37:08 +0800</pubDate>
      
      <guid>https://palagend.github.io/posts/2019/09/openstack-source-code-debug/</guid>
      <description>由于openstack版本迭代的太快，很多上一个版本还能用的东西，下个版本又不能用了，我开始接触的时候是M版，等我上手之后，P版已经成熟，Q版也可以使用了。因为我需要对keystone的架构重写，所以我首先要解决的问题就是调试源代码，虽然通过各种书籍理论知道了keystone的架构模型，但实际自己去动源代码，也是很难的。
一开始我参考网上给的调试方法，结果发现，由于版本的更迭，很多东西已经不一样了，比如以前keystone自己通过脚本启动，但现在已经是依靠apache2启动了，所以，开篇之前，说明，我的所以代码都来自P版本，而且因为自己摸索时，经常遇到网上大牛给的方法不够详细，导致我无法进行，所以，我会非常详细的说明每个步骤，每个步骤我都会在P版本测试，如有疑问，欢迎交流。这里大家可以先只装keystone模块，后续需要其它模块的时候再继续装，安装就参照官网方法。我这里采用ubuntu版本的。
第一篇，我们需要对openstack采用的架构作一个简单的说明，要读懂调试源代码，首先我们要知道openstack的基本架构，而openstack每个模块都差不多，所以当我们理解一个之后，后面都可以很轻松的实现。
首先，openstack采用WSGI框架，这个大家可参考这篇文章，我觉得是我看过最清晰明了的。然后，还需要了解python paste，可以参考这篇文章。开始之前，请确保自己基本了解了这两个东西，这是继续下去的前提。其中paste后面还会涉及一些东西，到时候我会说，这里就先了解一下。
好了，当你清楚WSGI框架之后，我们来说说apache和keystone的关系，现在版本的keystone已经不需要自己启动了，都是service apache2 start即可，apache其实就是帮助keystone实现了套接字，也就是帮助keystone监听相应端口，这里对应的配置文件是/etc/apache2/sites-available/keystone.conf，同时必须在/etc/apache2/sites-enabled/中建立同名的链接才能生效。
才看keystone.conf配置文件：
Listen 5000 Listen 35357 &amp;lt;VirtualHost *:5000&amp;gt; WSGIScriptAlias / /usr/bin/keystone-wsgi-public WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP} WSGIProcessGroup keystone-public WSGIApplicationGroup %{GLOBAL} WSGIPassAuthorization On LimitRequestBody 114688 &amp;lt;IfVersion &amp;gt;= 2.4&amp;gt; ErrorLogFormat &amp;quot;%{cu}t %M&amp;quot; &amp;lt;/IfVersion&amp;gt; ErrorLog /var/log/apache2/keystone.log CustomLog /var/log/apache2/keystone_access.log combined &amp;lt;Directory /usr/bin&amp;gt; &amp;lt;IfVersion &amp;gt;= 2.4&amp;gt; Require all granted &amp;lt;/IfVersion&amp;gt; &amp;lt;IfVersion &amp;lt; 2.4&amp;gt; Order allow,deny Allow from all &amp;lt;/IfVersion&amp;gt; &amp;lt;/Directory&amp;gt; &amp;lt;/VirtualHost&amp;gt; &amp;lt;VirtualHost *:35357&amp;gt; WSGIScriptAlias / /usr/bin/keystone-wsgi-admin WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP} WSGIProcessGroup keystone-admin WSGIApplicationGroup %{GLOBAL} WSGIPassAuthorization On LimitRequestBody 114688 &amp;lt;IfVersion &amp;gt;= 2.</description>
    </item>
    
  </channel>
</rss>